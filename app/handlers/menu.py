from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import ContextTypes
from app.config import CFG


def _is_admin(update: Update) -> bool:
    uid = update.effective_user.id if update.effective_user else None
    return uid in getattr(CFG, "ADMIN_IDS", set())


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = "–í—ã–±–µ—Ä–∏ —Å–µ—Ä–≤–∏—Å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞:"

    # –ë–∞–∑–æ–≤–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
    keyboard = [
        [
            InlineKeyboardButton("üì¶ Marktplaats", callback_data="QR:START"),
            InlineKeyboardButton("üáÆüáπ Subito", callback_data="QR:SUBITO"),
        ]
    ]

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –∞–¥–º–∏–Ω–∞ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω
    if _is_admin(update):
        keyboard.append([InlineKeyboardButton("üîë –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ API –∫–ª—é—á–∞–º–∏", callback_data="KEYS:START")])

    keyboard.append([InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data="MENU")])

    reply_markup = InlineKeyboardMarkup(keyboard)

    if update.message:
        await update.message.reply_text(text, reply_markup=reply_markup)
    else:
        await update.callback_query.message.edit_text(text, reply_markup=reply_markup)


async def menu_cb(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'"""
    await update.callback_query.answer()
    return await start(update, context)